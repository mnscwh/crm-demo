// === FILE: scripts/ocr_scan_to_json.ts ===
import fs from "fs";
import path from "path";
import Tesseract from "tesseract.js";
import { getFileHash, getDocuments, saveJSON } from "../lib/server-utils"; // ‚úÖ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ

const DOCS_DIR = path.join(process.cwd(), "public/docs_pdfa");
const OCR_DIR = path.join(process.cwd(), "public/docs_ocr");
const MANIFEST_PATH = path.join(process.cwd(), "data/doc_manifest.json");

// –ü–µ—Ä–µ–∫–æ–Ω–∞–π–º–æ—Å—è, —â–æ —Ü—ñ–ª—å–æ–≤–∞ —Ç–µ–∫–∞ —ñ—Å–Ω—É—î
if (!fs.existsSync(OCR_DIR)) fs.mkdirSync(OCR_DIR, { recursive: true });

async function processDocuments() {
  const allDocs = getDocuments(DOCS_DIR);
  console.log(`üîç –ó–Ω–∞–π–¥–µ–Ω–æ ${allDocs.length} –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –¥–ª—è OCR.`);

  const manifest: any[] = [];

  for (const docPath of allDocs) {
    const fileName = path.basename(docPath);
    const ocrPath = path.join(OCR_DIR, `${fileName}.ocr.json`);

    console.log(`üß† –û–±—Ä–æ–±–∫–∞ ${fileName}...`);
    const hash = getFileHash(docPath);

    try {
      if (fileName.endsWith(".pdf")) {
        const { data } = await Tesseract.recognize(docPath, "ukr+eng");
        const result = {
          file: fileName,
          text: data.text.slice(0, 5000),
          lang: (data as any).language || "ukr",
          confidence: data.confidence,
          hash,
          createdAt: new Date().toISOString(),
        };
        saveJSON(ocrPath, result);
      } else {
        const result = {
          file: fileName,
          text: "–¢–µ—Å—Ç–æ–≤–∏–π –¥–æ–∫—É–º–µ–Ω—Ç DOCX. OCR –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω.",
          hash,
          createdAt: new Date().toISOString(),
        };
        saveJSON(ocrPath, result);
      }

      manifest.push({
        file: fileName,
        ocrFile: `/public/docs_ocr/${fileName}.ocr.json`,
        sha256: hash,
        status: "processed",
        summary: "OCR –≤–∏–∫–æ–Ω–∞–Ω–æ, —Ç–µ–∫—Å—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ.",
        date: new Date().toISOString(),
      });
    } catch (err: any) {
      console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ OCR –¥–ª—è ${fileName}:`, err.message);
      manifest.push({
        file: fileName,
        status: "error",
        error: err.message,
      });
    }
  }

  saveJSON(MANIFEST_PATH, manifest);
  console.log("‚úÖ OCR –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ú–∞–Ω—ñ—Ñ–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ:", MANIFEST_PATH);
}

processDocuments();