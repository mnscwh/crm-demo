"use client";
import { useState } from "react";

export function DocumentInspector({ doc }: { doc: any }) {
  const [aiSummary, setAiSummary] = useState<string>("");
  const [lawRefs, setLawRefs] = useState<any[]>([]);
  const [error, setError] = useState<string>("");

  async function runAI() {
    setAiSummary("üîÑ –ê–Ω–∞–ª—ñ–∑ –¥–æ–∫—É–º–µ–Ω—Ç—É...");
    setError("");
    setLawRefs([]);

    try {
      const q = "–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –¥–æ–∫—É–º–µ–Ω—Ç: –≤–∏—è–≤–∏—Ç–∏ —Ä–∏–∑–∏–∫–∏, —Å—Ç—Ä–æ–∫–∏, –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ.";
      const res = await fetch("/api/ai-on-docs", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ question: q, filename: doc.file.pdfa }),
      });
      const data = await res.json();

      if (!data.ok && data.error) {
        setError(data.error);
        setAiSummary("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É.");
        return;
      }

      setAiSummary(data.answer || "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö —É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö.");
      setLawRefs(data.laws || []);
    } catch (err: any) {
      setError(err.message);
      setAiSummary("‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞.");
    }
  }

  return (
    <div className="space-y-4 p-4 bg-white rounded-xl border shadow-sm">
      <h2 className="text-xl font-semibold text-indigo-700">{doc.title}</h2>

      <div className="text-sm text-gray-600">
        <p><strong>–¢–∏–ø:</strong> {doc.type}</p>
        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {doc.status}</p>
        <p>
          <strong>SHA256:</strong>{" "}
          {doc.versions?.[0]?.sha256?.slice(0, 16) || "‚Äî"}...
        </p>
      </div>

      <button
        onClick={runAI}
        className="px-4 py-2 bg-indigo-600 text-white text-sm rounded-lg hover:bg-indigo-700"
      >
        ‚öñÔ∏è AI-–∞–Ω–∞–ª—ñ–∑ –¥–æ–∫—É–º–µ–Ω—Ç—É
      </button>

      {aiSummary && (
        <div className="p-3 rounded-lg bg-indigo-50 border text-sm whitespace-pre-wrap">
          {aiSummary}
        </div>
      )}

      {error && (
        <div className="p-3 bg-rose-50 border border-rose-200 rounded-lg text-sm text-rose-700">
          {error}
        </div>
      )}

      {lawRefs.length > 0 && (
        <div className="p-3 bg-sky-50 border border-sky-200 rounded-lg text-sm">
          <h3 className="font-medium text-sky-700 mb-1">
            üìò –ü–æ–≤‚Äô—è–∑–∞–Ω—ñ —Å—Ç–∞—Ç—Ç—ñ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–∞:
          </h3>
          <ul className="list-disc ml-4">
            {lawRefs.map((l: any) => (
              <li key={l.id}>
                {l.type} {l.article ? `(${l.article})` : ""} ‚Äî {l.summary}
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
}