"use client";
import { useState } from "react";

export function CasesTable({ cases }: { cases: any[] }) {
  const [aiResult, setAiResult] = useState<string>("");

  async function analyze(c: any) {
    const q = `–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —Å—É–¥–æ–≤—É —Å–ø—Ä–∞–≤—É:\n${JSON.stringify(c, null, 2)}\n–û–ø–∏—à–∏ —Ä–∏–∑–∏–∫–∏, —Å–∏–ª—å–Ω—ñ —Å—Ç–æ—Ä–æ–Ω–∏ —Ç–∞ –º–æ–∂–ª–∏–≤—ñ –¥—ñ—ó.`;
    const r = await fetch("/api/ai-general", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ question: q }),
    });
    const d = await r.json();
    setAiResult(d.answer || "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö.");
  }

  return (
    <div className="space-y-6 p-6">
      <h1 className="text-2xl font-semibold text-indigo-800">–°–ø—Ä–∞–≤–∏</h1>

      <div className="rounded-xl overflow-hidden border bg-white">
        <table className="w-full text-sm">
          <thead className="bg-indigo-50 text-indigo-900">
            <tr>
              <th className="py-2 px-3 text-left">–ù–∞–∑–≤–∞</th>
              <th className="py-2 px-3 text-center">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è</th>
              <th className="py-2 px-3 text-center">–°—Ç–∞—Ç—É—Å</th>
              <th className="py-2 px-3 text-center">–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å</th>
              <th className="py-2 px-3 text-center">–†–∏–∑–∏–∫</th>
              <th className="py-2 px-3 text-center">–î–∞—Ç–∞ —Å—É–¥—É</th>
              <th className="py-2 px-3 text-center">AI</th>
            </tr>
          </thead>
          <tbody>
            {cases.map((c) => (
              <tr key={c.id} className="border-t hover:bg-indigo-50">
                <td className="py-2 px-3">{c.title}</td>
                <td className="py-2 px-3 text-center">{c.category}</td>
                <td className="py-2 px-3 text-center">{c.status}</td>
                <td className="py-2 px-3 text-center">
                  {Math.round((c.aiAnalysis?.successProbability || 0) * 100)}%
                </td>
                <td className="py-2 px-3 text-center">
                  <span
                    className={`px-2 py-1 rounded-full text-xs border ${
                      c.aiAnalysis?.riskLevel === "–í–∏—Å–æ–∫–∏–π"
                        ? "bg-rose-50 text-rose-700 border-rose-200"
                        : c.aiAnalysis?.riskLevel === "–°–µ—Ä–µ–¥–Ω—ñ–π"
                        ? "bg-amber-50 text-amber-700 border-amber-200"
                        : "bg-emerald-50 text-emerald-700 border-emerald-200"
                    }`}
                  >
                    {c.aiAnalysis?.riskLevel || "‚Äî"}
                  </span>
                </td>
                <td className="py-2 px-3 text-center">
                  {c.courtDate
                    ? new Date(c.courtDate).toLocaleDateString("uk-UA")
                    : "‚Äî"}
                </td>
                <td className="py-2 px-3 text-center">
                  <button
                    onClick={() => analyze(c)}
                    className="text-indigo-600 hover:text-indigo-800 text-xs"
                  >
                    üîç –ê–Ω–∞–ª—ñ–∑
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {aiResult && (
        <div className="p-3 rounded-lg bg-indigo-50 text-gray-800 border text-sm whitespace-pre-wrap">
          {aiResult}
        </div>
      )}
    </div>
  );
}